[EnvironmentSettings]
;total_height=1000
; Total block height generated before simulation stops.
total_round=100000
; Total rounds before simulation stops.
process_bar_type=round
; Set the style of process bar: round/height
miner_num=20
; Total miner number in network.
blocksize=8
; MB.
consensus_type=consensus.PoW
; network_type=network.TopologyNetwork
network_type=network.SynchronousNetwork
; network_type=network.BoundedDelayNetwork
; network_type=network.PropVecNetwork
show_fig=False
; Show figures during simulation.
compact_outputfile=False
; If True, simplify log and result outputs to reduce disk space consumption.

[ConsensusSettings]
q_ave=1
; Average hash rate, the average number of hash operation per round.
q_distr=equal
; 'equal': all miners have equal hash rate; 'rand' means q satisfies gaussion distribution.
target=000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
; A hexadecimal number serving as the target value for PoW hashing puzzles.

[AttackSettings]
adver_num = 5
; Total number of adversaries.
; adver_lists=(0,1,2,4,5,6)
; Specify id of adversaries. If adversary_ids is set, 'adver_num' won't take effect.
attack_type = HonestMining
; attack_type = DoubleSpending
; attack_type = SelfishMining
; care the caps
attack_arg = {'attack_type': 'DoubleSpending', 'Ng': 5, 'N':2}
; till now, only DoubleSpending needs attack arg
; it do not work when using other attack type
eclipse = True
; eclipse only work in the TopologyNetwork


[PropVecNetworkSettings]
prop_vector=[0.1, 0.2, 0.4, 0.6, 1.0]
; Propagation vector. The elements represent 
; the rate of received miners when (1,2,3...) rounds passed.
; The last element must be 1.0 .

[BoundedDelayNetworkSettings]
rcvprob_start=0.001
; Initial receive probability when a block access network.
rcvprob_inc=0.001  
; Increment of rreceive probability per round.
block_prop_times_statistic=[0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
; The block propagtion times for different rates of received miners that required statistics. 

[TopologyNetworkSettings] 
TTL=500
; Max round can a message live in network
gen_net_approach=adj
; coo/adj/rand
save_routing_graph=False
; Genarate routing graph at the end of simulation or not. If True, the process may be long;
; `compact_outputfile` should be `False` to enable `save_routing_graph` to work.
show_label=Fasle
; Show edge labels on network and routing graph or not. If miner_num is large, graphs with label are hard to see clearly. 
; ;edge_prob=0.08
; ;If gen_net_approach is'rand', choose each of the possible edges with probability edge_prop.
ave_degree=2
; If gen_net_approach is'rand', set the average degree.
bandwidth_honest=0.5
; Set bandwidth between honest miners and between the honest and adversaries(MB/round)
bandwidth_adv=5 
; Set bandwidth between adversaries(MB/round)
block_prop_times_statistic=[0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
; The block propagtion times for different rates of received miners that required statistics. 

